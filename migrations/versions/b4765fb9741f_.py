"""empty message

Revision ID: b4765fb9741f
Revises: 
Create Date: 2025-09-23 22:29:51.628818

"""
from alembic import op
import sqlalchemy as sa
from app import app

# revision identifiers, used by Alembic.
revision = 'b4765fb9741f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    insp = sa.inspect(bind)
    if not insp.has_table('party'):
        op.create_table('party',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('naam', sa.String(length=100), nullable=False),
        sa.Column('afkorting', sa.String(length=10), nullable=False),
        sa.Column('actief', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('logo_url', sa.String(length=512), nullable=True),
        sa.Column('logo_filename', sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('afkorting'),
        sa.UniqueConstraint('naam')
        )

    elif not insp.has_table('user'):    
        op.create_table('user',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('email', sa.String(length=120), nullable=False),
        sa.Column('password_hash', sa.String(length=120), nullable=False),
        sa.Column('naam', sa.String(length=100), nullable=False),
        sa.Column('partij_id', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('role', sa.String(length=120), nullable=True),
        sa.Column('profile_url', sa.String(length=512), nullable=True),
        sa.Column('profile_filename', sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(['partij_id'], ['party.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email')
        )
    
    elif not insp.has_table('amendementen') and not insp.has_table('motie') and not insp.has_table('motie_medeindieners'):
        op.create_table('amendementen',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('titel', sa.String(length=200), nullable=False),
        sa.Column('constaterende_dat', app.models.JSONEncodedList(), nullable=True),
        sa.Column('overwegende_dat', app.models.JSONEncodedList(), nullable=True),
        sa.Column('opdracht_formulering', sa.Text(), nullable=False),
        sa.Column('wijzigingen', app.models.JSONEncodedList(), nullable=True),
        sa.Column('status', sa.String(length=20), nullable=True),
        sa.Column('gemeenteraad_datum', sa.String(length=40), nullable=True),
        sa.Column('agendapunt', sa.String(length=40), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.Column('created_by', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_table('motie',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('titel', sa.String(length=200), nullable=False),
        sa.Column('constaterende_dat', app.models.JSONEncodedList(), nullable=True),
        sa.Column('overwegende_dat', app.models.JSONEncodedList(), nullable=True),
        sa.Column('opdracht_formulering', sa.Text(), nullable=False),
        sa.Column('draagt_college_op', app.models.JSONEncodedList(), nullable=True),
        sa.Column('status', sa.String(length=20), nullable=True),
        sa.Column('gemeenteraad_datum', sa.String(length=40), nullable=True),
        sa.Column('agendapunt', sa.String(length=40), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.Column('indiener_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['indiener_id'], ['user.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_table('motie_medeindieners',
        sa.Column('motie_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['motie_id'], ['motie.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('motie_id', 'user_id'),
        sa.UniqueConstraint('motie_id', 'user_id', name='uq_motie_user')
        )
    else:
        print("Tabellen bestaan al, migratie wordt overgeslagen.")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('motie_medeindieners')
    op.drop_table('motie')
    op.drop_table('amendementen')
    op.drop_table('user')
    op.drop_table('party')
    # ### end Alembic commands ###
